shader_type canvas_item;
uniform sampler2D reflection_viewport;
uniform sampler2D normal_map;
uniform float amount : hint_range(0, 1);

struct X {
    int y,
    int z,
}

void fragment(int x)
{
	vec4 color = texture(TEXTURE, UV);
	vec2 offset = texture(normal_map, UV).xy * amount;
	vec4 reflection = texture(reflection_viewport, SCREEN_UV + offset);
	color.rgb = color.rgb * (1.0 - reflection.a) + reflection.rgb * reflection.a;
    COLOR = color;
}
